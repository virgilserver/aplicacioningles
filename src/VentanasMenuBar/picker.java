/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VentanasMenuBar;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import sql.ConexionSQLServer;

/**
 *
 * @author Xcode
 */
public class picker extends javax.swing.JFrame {
String concepto;
ResultSet rs;
TreeMap<String , Object > ids;
    /**
     * Creates new form picker
     */
    public picker(String concepto) {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setResizable(false);
        
        this.concepto = concepto;
        llenarComboBox();
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        this.setVisible(true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboNombres = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        comboNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNombresActionPerformed(evt);
            }
        });

        jButton1.setText("SELECCIONAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("CANCELAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EDITAR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(comboNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(comboNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboNombresActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
             String str = this.comboNombres.getSelectedItem().toString().trim();
             int id = (int) ids.get(str);
             
        switch (concepto) {
            case "tipoalumno":
            
                new ventanaAgregarTipoAlumno(id);
            
                dispose();
                break;
            case "idioma":
                new ventanaAgregarIdioma(id);
                dispose();
            
                break;
            case "carrera":
                new ventanaAgregarCarrera(id);
                dispose();
                break;
            case "salon":
                
                break;
            default:
                throw new AssertionError();
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboNombres;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private void llenarComboBox() {
      ids = new TreeMap<>();
       
       
        switch (concepto) {
            case "tipoalumno":
                idTipoAlumno();
                break;
            case "idioma":
                idioma();
                break;
            case "carrera":
                carrera();
                break;
            case "salon":
                 salon();
                break;
            default:
                throw new AssertionError();
        }
        
        
       
         
    }
    
    
    
    
    public void idTipoAlumno(){
    try {
        rs = ConexionSQLServer.vistaIdTipoAlumno();
              while (rs.next()) {
          int tipoAlumno = rs.getInt(1);
          String tipo = rs.getString(2).trim();
          this.comboNombres.addItem(tipo.trim());
          ids.put(tipo  , tipoAlumno);
        }
    } catch (SQLException ex) {
        Logger.getLogger(picker.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

    private void idioma() {
    try {
        rs = ConexionSQLServer.vistaIdiomas();
         while (rs.next()) {
            int idIdioma = rs.getInt(1);
            String nombreIdioma = rs.getString(2).trim();
            this.comboNombres.addItem(nombreIdioma);
            ids.put(nombreIdioma, idIdioma);
               }
    } catch (SQLException ex) {
        Logger.getLogger(picker.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
    }

    private void carrera() {
    try {
        rs = ConexionSQLServer.vistaCarreras();
        while (rs.next()) {
            int idCarreras = rs.getInt(1);
            String nombreCarrera = rs.getString(2).trim();
            this.comboNombres.addItem(nombreCarrera);
            this.ids.put(nombreCarrera, idCarreras);
        }
    } catch (SQLException ex) {
        Logger.getLogger(picker.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    }

    private void salon() {
    try {
        rs = ConexionSQLServer.vistaIdSalon();
        
        
        while (rs.next()) {
            String letraSalon  = rs.getString(1);
            int idSalon = rs.getInt(2);
            this.comboNombres.addItem(letraSalon);
            this.ids.put(letraSalon, idSalon);
            
            
        }
    } catch (SQLException ex) {
        Logger.getLogger(picker.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    }
}
