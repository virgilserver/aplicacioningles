/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alumno;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import sql.ConexionSQLServer;
import utilerias.JTextFieldFilter;
import utilerias.filtroNumeroDeControl;
import utilerias.mensajesEnPantalla;

/**
 *
 * @author Luis
 */
public class AgregarAlumno extends javax.swing.JPanel {

    String entrada = null;
    String nControlTemporal = null;
    String nControlTemporal2 = null;
    String carreraTemporal = null;
    int idAlumnoTemporal;

    public String getEntrada() {
        return entrada;
    }

    public void setEntrada(String entrada) {
        this.entrada = entrada;
        this.agregarAlumnoBoton.setText(entrada);
        System.out.println("entrada : " + this.entrada);
    }
    
    
    TreeMap<String, String> carreras = null;
    TreeMap<String, Integer> tipoAlumnos = null;
    boolean externo = false;
    listaDeAlumnos hermano = null;

    AgregarAlumno(listaDeAlumnos LA) {
        initComponents();
        llenarComboBoxCarrera();
        llenarCumboBoxTipoAlumno();
        formatearTextField();

        hermano = LA;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nombreAlumnoField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        apellidoAlumnoField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        numeroDeControlField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comboCarrera = new javax.swing.JComboBox();
        agregarAlumnoBoton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        numeroDeControlField2 = new javax.swing.JTextField();
        ComboSexo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboTipoAlumno = new javax.swing.JComboBox();
        botonCancelar = new javax.swing.JButton();

        setBackground(new java.awt.Color(223, 218, 242));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setPreferredSize(new java.awt.Dimension(850, 600));

        jLabel1.setText("Nombre(s) del Alumno");

        nombreAlumnoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreAlumnoFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Apellidos del Alumno");

        apellidoAlumnoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidoAlumnoFieldActionPerformed(evt);
            }
        });
        apellidoAlumnoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                apellidoAlumnoFieldKeyTyped(evt);
            }
        });

        jLabel3.setText("Numero De Control");

        numeroDeControlField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroDeControlFieldActionPerformed(evt);
            }
        });
        numeroDeControlField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroDeControlFieldKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numeroDeControlFieldKeyPressed(evt);
            }
        });

        jLabel4.setText("Carrera");

        comboCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCarreraActionPerformed(evt);
            }
        });
        comboCarrera.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboCarreraPropertyChange(evt);
            }
        });

        agregarAlumnoBoton.setText("Agregar");
        agregarAlumnoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarAlumnoBotonActionPerformed(evt);
            }
        });

        jLabel5.setText("Confirmar NC");

        numeroDeControlField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numeroDeControlField2KeyPressed(evt);
            }
        });

        ComboSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MASCULINO", "FEMENINO" }));

        jLabel6.setText("Sexo");

        jLabel7.setText("Tipo de Alumno");

        comboTipoAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoAlumnoActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonCancelar)
                        .addGap(27, 27, 27)
                        .addComponent(agregarAlumnoBoton)
                        .addGap(166, 166, 166))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(comboTipoAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ComboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(numeroDeControlField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(numeroDeControlField, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGap(241, 241, 241))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel4)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(547, 547, 547))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addGap(98, 98, 98)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(apellidoAlumnoField, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nombreAlumnoField, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(134, 134, 134)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreAlumnoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(apellidoAlumnoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboTipoAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(numeroDeControlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(numeroDeControlField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarAlumnoBoton)
                    .addComponent(botonCancelar))
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nombreAlumnoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreAlumnoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreAlumnoFieldActionPerformed

    private void apellidoAlumnoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidoAlumnoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidoAlumnoFieldActionPerformed

    private void numeroDeControlFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroDeControlFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroDeControlFieldActionPerformed

    private void apellidoAlumnoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoAlumnoFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidoAlumnoFieldKeyTyped

    private void numeroDeControlFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDeControlFieldKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_numeroDeControlFieldKeyTyped

    private void numeroDeControlFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDeControlFieldKeyPressed
        // TODO add your handling code here:
        String texto = this.numeroDeControlField.getText();
        if (texto.charAt(0) != 'E' && texto.charAt(0) != 'D' && texto.charAt(0) != 'M' && texto.charAt(0) != 'e' && texto.charAt(0) != 'd' && texto.charAt(0) != 'm') {
            this.numeroDeControlField.setText("");
        }
    }//GEN-LAST:event_numeroDeControlFieldKeyPressed

    private void agregarAlumnoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarAlumnoBotonActionPerformed
        // TODO add your handling code here:

        TreeMap<String, Object> parametros = new TreeMap<>();
        parametros.put("Nombre", nombreAlumnoField.getText().toUpperCase().trim());
        parametros.put("Apellidos", apellidoAlumnoField.getText().toUpperCase().trim());
        parametros.put("NC", numeroDeControlField.getText().toUpperCase());
        String sexo = (String) ComboSexo.getSelectedItem(); //
        String sex = String.valueOf(sexo.charAt(0)); //
        parametros.put("Sexo", sex.toUpperCase()); //
        String nombreCarrera;
        nombreCarrera = comboCarrera.getSelectedItem().toString();
        String idcarrera;
        String tipoalumno;
        int idTipoAlumno;
        tipoalumno = (String) comboTipoAlumno.getSelectedItem();
        idTipoAlumno = tipoAlumnos.get(tipoalumno);
        parametros.put("idTipoAlumno", idTipoAlumno);
        nombreCarrera = (String) comboCarrera.getSelectedItem();
        idcarrera = carreras.get(nombreCarrera);
        parametros.put("idCarrera", idcarrera.toUpperCase());

        if (!nombreAlumnoField.getText().isEmpty() && !apellidoAlumnoField.getText().isEmpty()) {
            switch (entrada) {
                case "Agregar":
                    if (externo) {
                        if (ConexionSQLServer.insertarAlumnoExternos(parametros)) {
                            mensajesEnPantalla.mensajeExitoso("Alumno fue registrado exitosamente", "Registro");
                        }
                        borrarTextFields();
                        this.setVisible(false);
                    hermano.llenarTabla();
                    hermano.llenartreemapidalumnos();
                    
                    entrada = "Cambiar";
                        principalAlumno.jTabbedPane1.setSelectedIndex(0);
                    } else {
                        if (!numeroDeControlField.getText().isEmpty() && !numeroDeControlField2.getText().isEmpty()) {
                            if (numeroDeControlField.getText().toUpperCase().equals(numeroDeControlField2.getText().toUpperCase())) {
                                if (ConexionSQLServer.insertarAlumno(parametros)) {
                                    mensajesEnPantalla.mensajeExitoso("Alumno fue registrado exitosamente", "Registro");
                                }
                                borrarTextFields();
                                this.setVisible(false);
                                hermano.llenarTabla();
                                hermano.llenartreemapidalumnos();
                                   
                    entrada = "Cambiar";
                                principalAlumno.jTabbedPane1.setSelectedIndex(0);

                            } else {
                                mensajesEnPantalla.mensajeError("Los Numeros de Control no coinciden", "Advertencia");
                            }
                        } else {
                            mensajesEnPantalla.mensajeError("Numero de Control es un campo requerido", "Advertencia");
                        }
                    }
                    break;
                case "Editar":
                    parametros.put("idAlumno", idAlumnoTemporal);
                    
                    if(externo){
                        if (ConexionSQLServer.modificarAlumnoExterno(parametros)) {
                                mensajesEnPantalla.mensajeExitoso("Alumno fue modificado exitosamente", "Registro");
                                borrarTextFields();
                                this.setVisible(false);
                                hermano.llenarTabla();
                                hermano.llenartreemapidalumnos();
                                formatearTextField();
                                   
                    entrada = "Cambiar";
                                principalAlumno.jTabbedPane1.setSelectedIndex(0);
                        }
                                
                    }else{
                        
                        
                         if (!numeroDeControlField.getText().isEmpty() && !numeroDeControlField2.getText().isEmpty()) {
                            if (numeroDeControlField.getText().toUpperCase().equals(numeroDeControlField2.getText().toUpperCase())) {
                                if (ConexionSQLServer.modificarAlumno(parametros)) {
                                    mensajesEnPantalla.mensajeExitoso("Alumno fue modificado exitosamente", "Registro");
                                }
                                borrarTextFields();
                                this.setVisible(false);
                                hermano.llenarTabla();
                                hermano.llenartreemapidalumnos();
                                 formatearTextField();
                                    
                    entrada = "Cambiar";
                                principalAlumno.jTabbedPane1.setSelectedIndex(0);

                            } else {
                                mensajesEnPantalla.mensajeError("Los Numeros de Control no coinciden", "Advertencia");
                            }
                        } else {
                            mensajesEnPantalla.mensajeError("Numero de Control es un campo requerido", "Advertencia");
                        }
                        
                        
                        
                        
                    }
                    
                    
                    
                    
                    
                    
                    
                    break;
                default:
                    throw new AssertionError();
            }

        } else {
            mensajesEnPantalla.mensajeError("Campos Nombre(s) y Apellidos son requeridos", "Advertencia");
        }


    }//GEN-LAST:event_agregarAlumnoBotonActionPerformed

    private void comboCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCarreraActionPerformed
        // TODO add your handling code here:
        System.out.println("indice   :" + this.comboCarrera.getSelectedIndex());
    }//GEN-LAST:event_comboCarreraActionPerformed

    private void numeroDeControlField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDeControlField2KeyPressed
        // TODO add your handling code here:
        String texto = this.numeroDeControlField2.getText();
        if (texto.charAt(0) != 'E' && texto.charAt(0) != 'D' && texto.charAt(0) != 'M' && texto.charAt(0) != 'e' && texto.charAt(0) != 'd' && texto.charAt(0) != 'm') {
            this.numeroDeControlField2.setText("");
        }


    }//GEN-LAST:event_numeroDeControlField2KeyPressed

    private void comboCarreraPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboCarreraPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCarreraPropertyChange

    private void comboTipoAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoAlumnoActionPerformed
        // TODO add your handling code here:

        String autoIncremental = "N";

        String seleccion = (String) comboTipoAlumno.getSelectedItem();
        seleccion = seleccion.trim();

        if (tipoAlumnos.get(seleccion) != null) {
            autoIncremental = ConexionSQLServer.obtenerAutoIncremental(tipoAlumnos.get(seleccion));

        }

        if (autoIncremental.equals("N")) {
            externo = false;
            if (nControlTemporal != null) {
                numeroDeControlField.setText(nControlTemporal);

            }
            if (nControlTemporal2 != null) {
                numeroDeControlField2.setText(nControlTemporal2);

            }
            this.nControlTemporal = null;

            if (carreraTemporal != null) {
                comboCarrera.setSelectedItem(carreraTemporal);
            }
            this.carreraTemporal = null;
            this.numeroDeControlField.setEnabled(true);
            this.numeroDeControlField2.setEnabled(true);
            this.comboCarrera.setEnabled(true);

        } else {

            externo = true;

            if (nControlTemporal == null) {
                nControlTemporal = numeroDeControlField.getText();
            }

            if (nControlTemporal2 == null) {
                nControlTemporal2 = numeroDeControlField2.getText();
            }
            if (carreraTemporal == null) {
                carreraTemporal = (String) comboCarrera.getSelectedItem();
            }

            this.numeroDeControlField.setText("");
            this.numeroDeControlField2.setText("");
            this.numeroDeControlField.setEnabled(false);
            this.numeroDeControlField2.setEnabled(false);

            this.comboCarrera.setSelectedItem("SIN CARRERA");
            this.comboCarrera.setEnabled(false);

        }


    }//GEN-LAST:event_comboTipoAlumnoActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // TODO add your handling code here:
        
        principalAlumno.jTabbedPane1.setSelectedIndex(0);
        borrarTextFields();
    }//GEN-LAST:event_botonCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox ComboSexo;
    public javax.swing.JButton agregarAlumnoBoton;
    public javax.swing.JTextField apellidoAlumnoField;
    private javax.swing.JButton botonCancelar;
    public javax.swing.JComboBox comboCarrera;
    public javax.swing.JComboBox comboTipoAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JTextField nombreAlumnoField;
    public javax.swing.JTextField numeroDeControlField;
    public javax.swing.JTextField numeroDeControlField2;
    // End of variables declaration//GEN-END:variables

    private void llenarComboBoxCarrera() {
        try {
            carreras = new TreeMap<>();
            ResultSet rs = ConexionSQLServer.vistaCarreras();
            while (rs.next()) {
                String nombreCarrera = rs.getString("nombreCarrera").trim();
                String idCarrera = rs.getString("idCarreras");

                carreras.put(nombreCarrera, idCarrera);
                System.out.println(nombreCarrera);
                String nc = nombreCarrera.trim();
                if (nc.equals("Externo") || nc.equals("Personal Docente") || nc.equals("Personal Administrativo")) {
                    System.out.println("ÑO");
                } else {
                    comboCarrera.addItem(nombreCarrera);

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(AgregarAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void formatearTextField() {
        System.out.println("skrilexxxxxxxx");
        JTextFieldFilter tf1 = new JTextFieldFilter(JTextFieldFilter.ALPHA, 45);
        tf1.setNegativeAccepted(true);
        nombreAlumnoField.setDocument(tf1);

        tf1 = new JTextFieldFilter(JTextFieldFilter.ALPHA, 45);
        tf1.setNegativeAccepted(true);
        apellidoAlumnoField.setDocument(tf1);

        filtroNumeroDeControl tfnc = new filtroNumeroDeControl(filtroNumeroDeControl.ncontrol, 9);
        tfnc.setNegativeAccepted(true);
        numeroDeControlField.setDocument(tfnc);
        tfnc = new filtroNumeroDeControl(filtroNumeroDeControl.ncontrol, 9);
        tfnc.setNegativeAccepted(true);
        numeroDeControlField2.setDocument(tfnc);
        
       

    }

    public void borrarTextFields() {
        carreraTemporal = null;
        nControlTemporal = null;
        nControlTemporal2 = null;
        this.nombreAlumnoField.setText("");
        this.apellidoAlumnoField.setText("");
        this.numeroDeControlField.setEnabled(true);

        this.numeroDeControlField2.setEnabled(true);
        this.numeroDeControlField.setText("");
        this.numeroDeControlField2.setText("");
        this.comboCarrera.setEnabled(true);
        this.comboCarrera.setSelectedIndex(0);
        this.comboTipoAlumno.setSelectedIndex(0);
        this.ComboSexo.setSelectedIndex(0);

    }

    private void llenarCumboBoxTipoAlumno() {
        tipoAlumnos = new TreeMap<>();
        try {
            ResultSet rs = ConexionSQLServer.vistaIdTipoAlumno();

            while (rs.next()) {
                String tipo = rs.getString(2);
                int id = rs.getInt(1);
                comboTipoAlumno.addItem(tipo.trim());
                tipoAlumnos.put(tipo.trim(), id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AgregarAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void llenarCamposParaEdicion(Integer get) {
        try {
            System.out.println("/////////");
            ResultSet rs = ConexionSQLServer.informacionAlumno(get);
//numeroDeControlField.removeAll();
//numeroDeControlField2.removeAll();
            rs.next();
           comboTipoAlumno.setSelectedItem(rs.getString(6).trim());
            System.out.println("numero de control " + rs.getString(1));
            numeroDeControlField.setText(rs.getString(1));
            numeroDeControlField2.setText(rs.getString(1));
            System.out.println("nombre :" + rs.getString(2).trim());
            nombreAlumnoField.setText(rs.getString(2).trim());
            apellidoAlumnoField.setText(rs.getString(3).trim());
            String sexo = rs.getString(4).trim();  
             // formatearTextField();
            
            if (sexo.charAt(0) == 'F') {
                sexo = "FEMENINO";
                System.out.println("sexo : " + sexo);
            } else {
                sexo = "MASCULINO";
            }

            ComboSexo.setSelectedItem(sexo);
            comboCarrera.setSelectedItem(rs.getString(5).trim());
            
            this.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(AgregarAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
