/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examen;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sql.ConexionSQLServer;
import utilerias.mensajesEnPantalla;

/**
 *
 * @author Luis
 */
public class panelExamenLiberacion extends javax.swing.JPanel {

    ArrayList<Integer> idExamenesLiberacion;
    TreeMap<String, Integer> idExamenLiberacion;

    /**
     * Creates new form panelExamenColocacion
     */
    public panelExamenLiberacion() {
        initComponents();
        llenarTabla();
        changeTime();

        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        totalDeALUMONS = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaExamenesLiberacion = new javax.swing.JTable();

        jButton1.setText("Registrar Examen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Administrar Examen");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Asignar Calificaciones");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Total de alumnos:");

        totalDeALUMONS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalDeALUMONS.setText("0");

        jButton4.setText("Eliminar Examen");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tablaExamenesLiberacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaExamenesLiberacion.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaExamenesLiberacion.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaExamenesLiberacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaExamenesLiberacionMouseClicked(evt);
            }
        });
        tablaExamenesLiberacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaExamenesLiberacionKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tablaExamenesLiberacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 134, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalDeALUMONS, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(totalDeALUMONS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new ventanaRegistrarExamenLiberacion(this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        int fila = tablaExamenesLiberacion.getSelectedRow();

        if (fila == -1) {
            mensajesEnPantalla.mensajeError("No se ha seleccionado algun examen", "Error");
        } else {
            int id = idExamenesLiberacion.get(fila);

            String nomMaestro = (String) tablaExamenesLiberacion.getValueAt(fila, 0);
            String salon = (String) tablaExamenesLiberacion.getValueAt(fila, 3);
            String fecha = tablaExamenesLiberacion.getValueAt(fila, 5).toString();
            String hora = tablaExamenesLiberacion.getValueAt(fila, 4).toString();
            System.out.println("---->" + id + " " + nomMaestro + " " + salon + " " + fecha + " " + hora);

            new VentanaAdmnExamenLiberacion(id, nomMaestro, fecha, hora, salon).setVisible(true);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        int fila = tablaExamenesLiberacion.getSelectedRow();

        if (fila == -1) {
            mensajesEnPantalla.mensajeError("No se ha seleccionado algun examen", "Error");
        } else {
            int id = idExamenesLiberacion.get(fila);

            String nomMaestro = (String) tablaExamenesLiberacion.getValueAt(fila, 0);
            String salon = (String) tablaExamenesLiberacion.getValueAt(fila, 3);
            String fecha = tablaExamenesLiberacion.getValueAt(fila, 5).toString();
            String hora = tablaExamenesLiberacion.getValueAt(fila, 4).toString();
            System.out.println("---->" + id + " " + nomMaestro + " " + salon + " " + fecha + " " + hora);
            new VentanaAsignarNivelExamenLiberacion(id, hora, fecha, hora, salon);
        }
        //  new VentanaAsignarNivelExamenLiberacion(id, nomMaestro, fecha, hora, salon);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int fila = tablaExamenesLiberacion.getSelectedRow();
        if (fila == -1) {
            mensajesEnPantalla.mensajeError("No se ha seleccionado algun examen", "Error");
        } else {

            
             int i = mensajesEnPantalla.mensajePregunta("Esta seguro que desea eliminar el examen seleccionado,esto conlleva a la eliminacion de los alumnos asignados a este examen al igual que sus calificaciones", "Eliminar");

            
          
       int clave = idExamenesLiberacion.get(fila);
       
       
           if (i == 0) {
                if (ConexionSQLServer.eliminarExamenLiberacion(clave)) {
                  mensajesEnPantalla.mensajeExitoso("Examen de Liberacion Eliminado Correctamente", "Eliminado");
                    llenarTabla();
           }
           }
          
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tablaExamenesLiberacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaExamenesLiberacionKeyReleased
        // TODO add your handling code here
        int pos = tablaExamenesLiberacion.getSelectedRow();
        System.out.println("");
        int clave = idExamenesLiberacion.get(pos);
        System.out.println("clave" + clave);
        totalDeALUMONS.setText(String.valueOf(ConexionSQLServer.totalAlumnosExamenLiberacion(clave)));


    }//GEN-LAST:event_tablaExamenesLiberacionKeyReleased

    private void tablaExamenesLiberacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaExamenesLiberacionMouseClicked
        // TODO add your handling code here:
        int pos = tablaExamenesLiberacion.getSelectedRow();
        System.out.println("");
        int clave = idExamenesLiberacion.get(pos);
        System.out.println("clave" + clave);
        totalDeALUMONS.setText(String.valueOf(ConexionSQLServer.totalAlumnosExamenLiberacion(clave)));
    }//GEN-LAST:event_tablaExamenesLiberacionMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaExamenesLiberacion;
    private javax.swing.JLabel totalDeALUMONS;
    // End of variables declaration//GEN-END:variables

    public void llenarTabla() {
        DefaultTableModel modelo = ConexionSQLServer.consultaToJtable("select * from vista_examenesLiberacion");

        tablaExamenesLiberacion.setModel(modelo);

        tablaExamenesLiberacion.getColumnModel().getColumn(0).setPreferredWidth(350);
        tablaExamenesLiberacion.getColumnModel().getColumn(0).setResizable(false);
        tablaExamenesLiberacion.getColumnModel().getColumn(1).setPreferredWidth(350);
        tablaExamenesLiberacion.getColumnModel().getColumn(1).setResizable(false);
        tablaExamenesLiberacion.getColumnModel().getColumn(2).setPreferredWidth(230);
        tablaExamenesLiberacion.getColumnModel().getColumn(2).setResizable(false);
        tablaExamenesLiberacion.getColumnModel().getColumn(3).setPreferredWidth(80);
        tablaExamenesLiberacion.getColumnModel().getColumn(3).setResizable(false);
//        
        tablaExamenesLiberacion.getColumnModel().getColumn(4).setPreferredWidth(100);
        tablaExamenesLiberacion.getColumnModel().getColumn(4).setResizable(false);

        tablaExamenesLiberacion.getColumnModel().getColumn(5).setPreferredWidth(200);
        tablaExamenesLiberacion.getColumnModel().getColumn(5).setResizable(false);
//        

        // tablaExamenesLiberacion.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        tablaExamenesLiberacion.getTableHeader().setReorderingAllowed(false);

        //llenarTreeMap();
        llenarArraylist();
        this.setVisible(true);
    }

    public void llenarTreeMap() {
        try {
            idExamenLiberacion = new TreeMap<>();
            ResultSet rs = ConexionSQLServer.vistaIdExamenLiberacion();

            while (rs.next()) {

                int id = rs.getInt(1);
                String clave = rs.getString(2);

                idExamenLiberacion.put(clave.trim(), id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelExamenLiberacion.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void changeTime() {
        String hora;
        System.out.println("sice " + idExamenesLiberacion.size());
        for (int i = 0; i < idExamenesLiberacion.size(); i++) {
            hora = tablaExamenesLiberacion.getValueAt(i, 4).toString().substring(0, 5);
            tablaExamenesLiberacion.setValueAt(hora, i, 4);

            System.out.println("hora -------" + hora);
        }

    }

    public void llenarArraylist() {

        try {
            idExamenesLiberacion = new ArrayList<>();

            ResultSet rs = ConexionSQLServer.vistaIdExamenesLiberacio();

            while (rs.next()) {
                int id = rs.getInt(1);
                System.out.println("id ++++" + id);
                idExamenesLiberacion.add(id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(panelExamenColocacion.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
