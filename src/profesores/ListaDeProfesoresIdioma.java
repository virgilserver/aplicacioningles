/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package profesores;

import alumno.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.ResultSet;
import java.sql.SQLException; 
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import sql.ConexionSQLServer;
import utilerias.JTextFieldFilter;
import utilerias.mensajesEnPantalla;

/**
 *
 * @author Luis
 */
public class ListaDeProfesoresIdioma extends javax.swing.JPanel {
    String stringSearch ="";
    TreeMap<String, Integer> maestros = null;
    public static ventanaEmergenteMaestroIdioma vemi = null;
    private TableRowSorter trsfiltro;


    /**
     * Creates new form panelPrincipal
     */
    public ListaDeProfesoresIdioma() {

        initComponents();
        llenarTabla();
        llenartreemapidmaestrosidiomas();
        trsfiltro = new TableRowSorter(tablaProfesores.getModel());
        tablaProfesores.setRowSorter(trsfiltro);
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProfesores = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        BotonEliminar = new javax.swing.JButton();
        TFBuscar = new javax.swing.JTextField();
        botonLupita = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(850, 600));

        tablaProfesores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaProfesores.setToolTipText("");
        tablaProfesores.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jScrollPane1.setViewportView(tablaProfesores);

        jButton1.setText("EDITAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BotonEliminar.setText("ELIMINAR");
        BotonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEliminarActionPerformed(evt);
            }
        });

        TFBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFBuscarActionPerformed(evt);
            }
        });
        TFBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TFBuscarKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TFBuscarKeyReleased(evt);
            }
        });

        botonLupita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconlupita.png"))); // NOI18N
        botonLupita.setBorder(null);
        botonLupita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLupitaActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar:");

        jButton2.setText("AGREGAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 434, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TFBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonLupita, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(BotonEliminar)
                        .addGap(40, 40, 40))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TFBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(botonLupita, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonEliminar)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            int fila = tablaProfesores.getSelectedRow();
        if (fila == -1) {
            mensajesEnPantalla.mensajeError("No se ha seleccionado ningun maestro de la tabla", "Error");
        }else{
      String clave = (String) tablaProfesores.getValueAt(fila, 0);
      int id = maestros.get(clave.trim());
     
      vemi = new ventanaEmergenteMaestroIdioma( id, this);
          
                
       
      
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BotonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEliminarActionPerformed
        // TODO add your handling code here:
       
      int fila = tablaProfesores.getSelectedRow();
        if (fila == -1) {
            mensajesEnPantalla.mensajeError("No se ha seleccionado algun maestro de la tabla", "Error");
        }else{
      String clave = (String) tablaProfesores.getValueAt(fila, 0);
      String nombre = tablaProfesores.getValueAt(fila, 1).toString().trim() + " " + tablaProfesores.getValueAt(fila, 2).toString().trim();
       
               
      
      System.out.println(maestros.get(clave.trim()));
            int id = maestros.get(clave.trim());
              
            
            
            int respuesta = mensajesEnPantalla.mensajePregunta("Esta seguro de elminar al profesor "+nombre+ " con la clave "+clave, "Advertencia");
            
            System.out.println("respuesta "+ respuesta);
            
            
            if (respuesta==0) {
                if (ConexionSQLServer.elimnarMaestroIdioma(id)) {
                    mensajesEnPantalla.mensajeExitoso("Eliminado correctamente", "Eliminado");
                    this.llenarTabla();
                    this.setVisible(true);
                }
                
            }
      
        }
    }//GEN-LAST:event_BotonEliminarActionPerformed

    private void TFBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFBuscarActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_TFBuscarActionPerformed

    private void botonLupitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLupitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonLupitaActionPerformed

    private void TFBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFBuscarKeyReleased
        // TODO add your handling code here:
        TFBuscar.setText(TFBuscar.getText().toUpperCase());
        
        
        
        if (stringSearch.length() > 1 ) {
                     char caracter =  TFBuscar.getText().charAt(1);
          String letra = "" + caracter;
            if (isNumeric(letra)) {
                System.out.println("es numeor de contorl");
               
            }else{
                System.out.println("nombre");
              
            }
           
        }
        filtro();
        
        
    }//GEN-LAST:event_TFBuscarKeyReleased

    private void TFBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TFBuscarKeyTyped
        // TODO add your handling code here:
        String cadena = String.valueOf(evt.getKeyChar());
                 int n = evt.getKeyChar();
                 
                 
                if (n == 8 && stringSearch.length() > 0) {
              stringSearch = stringSearch.substring(0, stringSearch.length() - 1);
                   
        }else{
                    
                    if (n!=8) {
                          stringSearch += cadena;
                    }
      
                
                }
        System.out.println(stringSearch);
        
    }//GEN-LAST:event_TFBuscarKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
           vemi = new ventanaEmergenteMaestroIdioma(this);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonEliminar;
    private javax.swing.JTextField TFBuscar;
    private javax.swing.JButton botonLupita;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTable tablaProfesores;
    // End of variables declaration//GEN-END:variables

    public  void llenarTabla() {
     
        
        DefaultTableModel modelo = ConexionSQLServer.consultaToJtable("Select *  from vista_ProfesorIdioma");
        
        tablaProfesores.setModel(modelo);
            trsfiltro = new TableRowSorter(tablaProfesores.getModel());
        tablaProfesores.setRowSorter(trsfiltro);
        this.revalidate();
                this.setVisible(true);
        
        
    }

 

    public void llenartreemapidmaestrosidiomas() {
        try {
            maestros = new TreeMap<>();
            ResultSet rs = ConexionSQLServer.vistaIdMaestrosIdiomas();
            
            while (rs.next()) {
                int idMaesroIdioma = rs.getInt(1); 
                String clavemaestro = rs.getString(2).trim();
                maestros.put(clavemaestro, idMaesroIdioma);
                System.out.println("cm:"+clavemaestro);
                System.out.println("idm:"+idMaesroIdioma);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListaDeProfesoresIdioma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void filtro(){
          trsfiltro.setRowFilter(RowFilter.regexFilter(TFBuscar.getText(), 1));
    }
     
    public boolean isNumeric(String str) {
        try {
            int d = Integer.parseInt(str);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }


  
}
