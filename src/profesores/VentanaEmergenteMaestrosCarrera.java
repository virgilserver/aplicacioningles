/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package profesores;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTabbedPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import sql.ConexionSQLServer;
import sun.font.EAttribute;
import utilerias.mensajesEnPantalla;

/**
 *
 * @author Luis
 */
public class VentanaEmergenteMaestrosCarrera extends javax.swing.JFrame {
    
    ListaDeProfesoresCarrera padre;
    TreeMap<String, Integer> carreras;    
    String entrada;
    int idMaestro;

    /**
     * Creates new form VentanaEmergenteMaestrosCarrera
     */
    public VentanaEmergenteMaestrosCarrera(ListaDeProfesoresCarrera aThis) {
        initComponents();
        entrada = "Agregar";
        llenarComboCarreras();
      
        padre = aThis;     
            
         this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        this.setVisible(true);
    }
    
    VentanaEmergenteMaestrosCarrera(ListaDeProfesoresCarrera aThis, int id) {
        this.idMaestro = id;
        System.out.println("id :::::::" + idMaestro);
        initComponents();
        entrada = "Editar";
        llenarComboCarreras();
        llenarCampos();
    
        padre = aThis;
            
         this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        this.setVisible(true);
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fieldApellidosMaestroCarrera = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fieldNombreMaestroCarrera = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldRFC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comboCarreras = new javax.swing.JComboBox();
        botonAceptar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre(s)");

        jLabel2.setText("Apellidos");

        jLabel3.setText("RFC");

        jLabel4.setText("Carrera");

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fieldApellidosMaestroCarrera, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(fieldNombreMaestroCarrera, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(fieldRFC, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(comboCarreras, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(261, Short.MAX_VALUE)
                .addComponent(botonAceptar)
                .addGap(18, 18, 18)
                .addComponent(botonCancelar)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fieldNombreMaestroCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fieldApellidosMaestroCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fieldRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(comboCarreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        // TODO add your handling code here:
        
        String nombre = fieldNombreMaestroCarrera.getText().toUpperCase();        
        String apellidos = fieldApellidosMaestroCarrera.getText().toUpperCase();
        String RFC = fieldRFC.getText().toUpperCase();
        String carrera = (String) comboCarreras.getSelectedItem();
        int idCarrera = carreras.get(carrera);
        
        switch (entrada) {
            case "Agregar":
                if (ConexionSQLServer.agregarMaestroCarrera(idCarrera, nombre, apellidos, RFC)) {
                    mensajesEnPantalla.mensajeExitoso("El maestro de carrera a sido agregado con exito", "Agregado");
                    padre.llenartabla();
                    padre.aplicarFiltro();
                    dispose();
                    
                }
                break;            
            case "Editar":
                if (ConexionSQLServer.modificarMaestroCarrera(nombre, apellidos, idMaestro, RFC, idCarrera)) {
                      mensajesEnPantalla.mensajeExitoso("El maestro de carrera a sido modificado correctamente", "Modificado");
                    padre.llenartabla();
                    padre.aplicarFiltro();
                    dispose();
                }
                
                break;
            default:
                throw new AssertionError();
        }
        

    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JComboBox comboCarreras;
    private javax.swing.JTextField fieldApellidosMaestroCarrera;
    private javax.swing.JTextField fieldNombreMaestroCarrera;
    private javax.swing.JTextField fieldRFC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

    private void llenarComboCarreras() {
        
        try {
            carreras = new TreeMap<>();
            ResultSet rs = ConexionSQLServer.vistaCarreras();
            
            while (rs.next()) {                
                
                int id = rs.getInt(1);
                String carrera = rs.getString(2);
                comboCarreras.addItem(carrera);
                carreras.put(carrera, id);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VentanaEmergenteMaestrosCarrera.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void llenarCampos() {
        try {
            ResultSet rs = ConexionSQLServer.obtenerUnMaestro(idMaestro);
            rs.next();
            
            String RFC = rs.getString(2);
            String nombre = rs.getString(3);
            String apellidos = rs.getString(4);
            String carrera = rs.getString(1);
            
            fieldApellidosMaestroCarrera.setText(apellidos);
            fieldNombreMaestroCarrera.setText(nombre);
            fieldRFC.setText(RFC);
            comboCarreras.setSelectedItem(carrera);
            
        } catch (SQLException ex) {
            Logger.getLogger(VentanaEmergenteMaestrosCarrera.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
}
